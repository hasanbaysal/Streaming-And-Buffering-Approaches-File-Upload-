// <auto-generated />
using AspNetCore.FileUpload.Approaches.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetCore.FileUpload.Approaches.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230227213447_streamimage")]
    partial class streamimage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetCore.FileUpload.Approaches.Models.MultipleImageProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MultipleImageProducts");
                });

            modelBuilder.Entity("AspNetCore.FileUpload.Approaches.Models.MultipleImageProductPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MultipleImageProductId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MultipleImageProductId");

                    b.ToTable("MultipleImageProductPaths");
                });

            modelBuilder.Entity("AspNetCore.FileUpload.Approaches.Models.SingleImageProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SingleImageProducts");
                });

            modelBuilder.Entity("AspNetCore.FileUpload.Approaches.Models.StreamUploadImageProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StreamUploadImageProducts");
                });

            modelBuilder.Entity("AspNetCore.FileUpload.Approaches.Models.MultipleImageProductPath", b =>
                {
                    b.HasOne("AspNetCore.FileUpload.Approaches.Models.MultipleImageProduct", "MultipleImageProduct")
                        .WithMany("MultipleImageProductPaths")
                        .HasForeignKey("MultipleImageProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MultipleImageProduct");
                });

            modelBuilder.Entity("AspNetCore.FileUpload.Approaches.Models.MultipleImageProduct", b =>
                {
                    b.Navigation("MultipleImageProductPaths");
                });
#pragma warning restore 612, 618
        }
    }
}
